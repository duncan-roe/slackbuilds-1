--- sdext/source/pdfimport/xpdfwrapper/pnghelper.cxx.orig	2025-06-05 20:22:59.000000000 +1000
+++ sdext/source/pdfimport/xpdfwrapper/pnghelper.cxx	2025-06-07 21:12:54.394041989 +1000
@@ -214,8 +214,9 @@
     int nLineSize = (width + 7)/8;
     aScanlines.reserve( nLineSize * height + height );
 
-    if (!str->reset())
-        return;
+    str->reset();
+    //if (!str->reset())
+    //    return;
     for( int y = 0; y < height; y++ )
     {
         // determine filter type (none) for this scanline
@@ -253,8 +254,9 @@
                         width,
                         colorMap->getNumPixelComps(),
                         colorMap->getBits()));
-    if (!imgStr->reset())
-        return;
+    imgStr->reset();
+    //if (!imgStr->reset())
+    //    return;
 
     // create scan line data buffer
     OutputBuffer aScanlines;
@@ -291,8 +293,9 @@
                         maskColorMap->getNumPixelComps(),
                         maskColorMap->getBits()));
 
-    if (!imgStrMask->reset())
-        return;
+    imgStrMask->reset();
+    //if (!imgStrMask->reset())
+    //    return;
 
     for( int y = 0; y < maskHeight; ++y )
     {
@@ -341,8 +344,9 @@
                         width,
                         colorMap->getNumPixelComps(),
                         colorMap->getBits()));
-    if (!imgStr->reset())
-        return;
+    imgStr->reset();
+    //if (!imgStr->reset())
+    //    return;
 
     // create scan line data buffer
     OutputBuffer aScanlines;
@@ -376,8 +380,9 @@
     std::unique_ptr<ImageStream> imgStrMask(
         new ImageStream(maskStr, maskWidth, 1, 1));
 
-    if (!imgStrMask->reset())
-        return;
+    imgStrMask->reset();
+    //if (!imgStrMask->reset())
+    //    return;
 
     for( int y = 0; y < maskHeight; ++y )
     {
--- sdext/source/pdfimport/xpdfwrapper/pdfioutdev_gpl.cxx.orig	2025-06-05 20:22:59.000000000 +1000
+++ sdext/source/pdfimport/xpdfwrapper/pdfioutdev_gpl.cxx	2025-06-07 22:55:54.377041989 +1000
@@ -231,8 +231,9 @@
 #else
     str = ((DCTStream *)str)->getRawStream();
 #endif
-    if (!str->reset())
-        return;
+    str->reset();
+    //if (!str->reset())
+    //    return;
 
     o_rOutputBuf.clear();
     ExtractJpegData(str, o_rOutputBuf);
@@ -268,8 +269,9 @@
     o_rOutputBuf.resize(header_size);
 
     // initialize stream
-    if (!str->reset())
-        return;
+    str->reset();
+    //if (!str->reset())
+    //    return;
 
     // copy the raw stream
     if( bInvert )
@@ -326,8 +328,9 @@
                         width,
                         colorMap->getNumPixelComps(),
                         colorMap->getBits()));
-    if (!imgStr->reset())
-        return;
+    imgStr->reset();
+    //if (!imgStr->reset())
+    //    return;
 
     for( int y=0; y<height; ++y)
     {
